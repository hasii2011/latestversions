
from unittest import TestSuite
from unittest import main as unitTestMain

from platform import platform as osPlatform

from codeallybasic.UnitTestBase import UnitTestBase

from packageversions.PackageVersions import MAC_OS_JQ_PATH
from packageversions.PackageVersions import NON_MAC__OS_JQ_PATH
from packageversions.PackageVersions import PackageVersions
from packageversions.PackageVersions import THE_GREAT_MAC_PLATFORM


class TestPackageVersions(UnitTestBase):
    """
    Auto generated by the one and only:
        Gato Malo â€“ Humberto A. Sanchez II
        Generated: 10 September 2024
    """
    @classmethod
    def setUpClass(cls):
        super().setUpClass()

    def setUp(self):
        super().setUp()

    def tearDown(self):
        super().tearDown()

    def testRunCommandFail(self):
        status: int = PackageVersions.runCommand('/bogus/bin/fail')
        self.assertNotEqual(0, status, 'This should fail')

    def testRunCommandPass(self):
        platform: str = osPlatform(terse=True)
        if platform == THE_GREAT_MAC_PLATFORM:
            status: int = PackageVersions.runCommand(MAC_OS_JQ_PATH)
        else:
            status = PackageVersions.runCommand(NON_MAC__OS_JQ_PATH)

        self.assertEqual(0, status, 'This should pass')


def suite() -> TestSuite:

    import unittest

    testSuite: TestSuite = TestSuite()

    testSuite.addTest(unittest.defaultTestLoader.loadTestsFromTestCase(testCaseClass=TestPackageVersions))

    return testSuite


if __name__ == '__main__':
    unitTestMain()
